{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./classes/widget.js","webpack:///./widgets/autocomplete.js","webpack:///./widgets/calendar.js","webpack:///./widgets/chips.js","webpack:///./widgets/slider.js","webpack:///./widgets/tabs.js","webpack:///./widgets/toast.js","webpack:///./docs/app.js","webpack:///./docs/style.scss"],"names":[],"mappings":";QAAA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;AClFA;AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,YAAY;AAC1B;AACe;AACf;AACA;AACA;AACA;AACA;AACA,oCAAoC;AACpC;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iDAAiD;AACjD;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,C;;;;;;;AC9HA;AAAA;AAAA;AACA;AACA;AACA;AACA;;AAEsC;;AAEvB,2BAA2B,+DAAM;AAChD;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,C;;;;;;;ACpBA;AAAA;AAAA;AACA;AACA;AACA;AACA;;AAEsC;;AAEvB,uBAAuB,+DAAM;AAC5C;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,C;;;;;;;ACpBA;AAAA;AAAA;AACA;AACA;AACA;AACA;;AAEsC;;AAEtC;AACA;AACA,cAAc,SAAS;AACvB,cAAc,gBAAgB;AAC9B,cAAc,YAAY;AAC1B;AACe,oBAAoB,+DAAM;AACzC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,kBAAkB;;AAE/C;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,uCAAuC,MAAM;AAC7C;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa;;AAEb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA,C;;;;;;;ACxLA;AAAA;AAAA;AACA;AACA;AACA;AACA;;AAEsC;;AAEvB,qBAAqB,+DAAM;AAC1C;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,C;;;;;;;ACpBA;AAAA;AAAA;AACA;AACA;AACA;AACA;;AAEsC;;AAEtC;AACA;AACA,cAAc,OAAO;AACrB,cAAc,IAAI;AAClB,cAAc,cAAc;AAC5B;AACe,mBAAmB,+DAAM;AACxC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,sEAAsE,UAAU;;AAEhF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,C;;;;;;;ACnHA;AAAA;AAAA;AACA;AACA;AACA;AACA;;AAEsC;;AAEvB,oBAAoB,+DAAM;AACzC;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,C;;;;;;;;;;;;;;;;;;ACpBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;;AAEA;AACkD;AACR;AACN;AACE;AACJ;AACE;;AAEpC;AACA,IAAI,mFAAY;AAChB,IAAI,2EAAQ;AACZ,IAAI,qEAAK;AACT,IAAI,uEAAM;AACV,IAAI,mEAAI;AACR,IAAI,qEAAK;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA,E;;;;;;ACjCA,uC","file":"../docs/assets/docs.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"../\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 10);\n","/*\n * Created by Artyom Manchenkov\n * artyom@manchenkoff.me\n * manchenkoff.me © 2019\n */\n\n/**\n * Base widget class\n *\n * @property {HTMLElement} element\n */\nexport default class Widget {\n    /**\n     * Base widget constructor\n     * @param element\n     * @param config\n     */\n    constructor(element, config = {}) {\n        // remember HTML element\n        this.element = element;\n\n        // merge widget configuration\n        this._buildConfig(config);\n\n        // call implemented methods\n        this.init();\n        this.log();\n    }\n\n    /**\n     * Returns current widget query selector\n     * @returns {string}\n     */\n    static get selector() {\n        console.error('selector() getter not implemented yet');\n\n        return '';\n    }\n\n    /**\n     * Returns current widget class name\n     * @returns {string}\n     */\n    static get class() {\n        console.error('class() getter not implemented yet');\n\n        return '';\n    }\n\n    /**\n     * Automatic registers widgets on the page by query selector and config\n     * @param selector\n     * @param config\n     */\n    static register(selector = false, config = {}) {\n        // initialize an instances list\n        this.class[\"instances\"] = [];\n\n        // set query selector\n        if (selector === false) {\n            selector = this.selector;\n        }\n\n        // finds all items on the page\n        document\n            .querySelectorAll(selector)\n            .forEach((elem) => {\n                this.class[\"instances\"].push(\n                    // creates a new instance of the widget\n                    new this.class(elem, config)\n                );\n            })\n    }\n\n    /**\n     * Returns a widget instance by query selector\n     * @param selector\n     * @returns {Widget}\n     */\n    static get(selector) {\n        let element = document.querySelector(selector);\n\n        return this.class[\"instances\"].find(\n            (widget) => {\n                return widget.element === element;\n            }\n        );\n    }\n\n    /**\n     * Returns default widget configuration\n     * @returns {{}}\n     */\n    get defaultConfig() {\n        return {\n            // config params\n        };\n    }\n\n    /**\n     * Merges widget configuration with default and user params\n     * @param config\n     * @private\n     */\n    _buildConfig(config) {\n        if (config) {\n            this.config = {\n                ...this.defaultConfig,\n                ...config\n            };\n        }\n    }\n\n    /**\n     * Prints information about current widget\n     */\n    log() {\n        console.info(this);\n    }\n\n    /**\n     * Widget base initialization\n     */\n    init() {\n        console.error('init() method not implemented yet');\n    }\n}","/*\n * Created by Artyom Manchenkov\n * artyom@manchenkoff.me\n * manchenkoff.me © 2019\n */\n\nimport Widget from '../classes/widget'\n\nexport default class Autocomplete extends Widget {\n    static get selector() {\n        return '[data-autocomplete]';\n    }\n\n    static get class() {\n        return Autocomplete;\n    }\n\n    init() {\n        //\n    }\n}","/*\n * Created by Artyom Manchenkov\n * artyom@manchenkoff.me\n * manchenkoff.me © 2019\n */\n\nimport Widget from '../classes/widget'\n\nexport default class Calendar extends Widget {\n    static get selector() {\n        return '[data-calendar]';\n    }\n\n    static get class() {\n        return Calendar;\n    }\n\n    init() {\n        //\n    }\n}","/*\n * Created by Artyom Manchenkov\n * artyom@manchenkoff.me\n * manchenkoff.me © 2019\n */\n\nimport Widget from '../classes/widget'\n\n/**\n * Chips component\n * @property {string[]} chips\n * @property {HTMLFormElement} input\n * @property {HTMLElement} chipsBlock\n */\nexport default class Chips extends Widget {\n    /**\n     * @inheritDoc\n     */\n    static get selector() {\n        return '[data-chips]';\n    }\n\n    /**\n     * @inheritDoc\n     */\n    static get class() {\n        return Chips;\n    }\n\n    /**\n     * Returns Chips widget configuration\n     * @returns {{submitByEnter: boolean, containerClasses: string[], submitByComma: boolean}}\n     */\n    get defaultConfig() {\n        return {\n            containerClasses: ['mb-3'],\n            submitByEnter: true,\n            submitByComma: true,\n        };\n    }\n\n    /**\n     * @inheritDoc\n     */\n    init() {\n        this.chips = [];\n\n        this._buildContainer();\n\n        this._buildInput();\n    }\n\n    /**\n     * Builds container for the chip items\n     * @private\n     */\n    _buildContainer() {\n        this.chipsContainer = document.createElement('div');\n\n        this.chipsContainer.classList.add(\n            this.config.containerClasses\n        );\n\n        this.element.parentElement.prepend(this.chipsContainer);\n    }\n\n    /**\n     * Builds an input to store value\n     * @private\n     */\n    _buildInput() {\n        this.input = document.createElement('input');\n        this.input.type = 'hidden';\n        this.input.name = `${this.element.name}`;\n\n        this.element.removeAttribute('name');\n        this.element.parentElement.append(this.input);\n\n        this.element.onkeyup = (event) => {\n            let useComma = (event.code === \"Comma\" && this.config.submitByComma);\n            let useEnter = (event.code === \"Enter\" && this.config.submitByEnter);\n\n            if (useComma || useEnter) {\n                let content = event.target.value.replace(',', '');\n\n                this.add(content);\n\n                event.target.value = '';\n            }\n        };\n    }\n\n    /**\n     * Creates a new chip item to append to the container\n     * @param label\n     * @returns {HTMLSpanElement}\n     * @private\n     */\n    _buildChip(label) {\n        // chip item\n        let chip = document.createElement('span');\n\n        chip.classList.add('chip');\n        chip.innerText = label;\n        chip.dataset.chip = label;\n\n        // close button\n        let closeButton = document.createElement('a');\n\n        closeButton.classList.add('btn', 'btn-clear');\n        closeButton.role = 'button';\n        closeButton.href = '#';\n\n        closeButton.onclick = (event) => {\n            this.delete(event.target.parentElement.dataset.chip);\n        };\n\n        chip.appendChild(closeButton);\n\n        return chip;\n    }\n\n    /**\n     * Resets UI values to update the latest changes\n     * @private\n     */\n    _reset() {\n        this.chipsContainer.innerHTML = '';\n        this.input.value = '';\n    }\n\n    /**\n     * Updates UI to the latest changes\n     */\n    refresh() {\n        this._reset();\n\n        this.chips.forEach(\n            (label) => {\n                let chip = this._buildChip(label);\n\n                this.input.value += `${label},`;\n                this.chipsContainer.appendChild(chip);\n            }\n        );\n\n        this.input.value = this.input.value.substr(\n            0, this.input.value.length - 1\n        );\n    }\n\n    /**\n     * Adds a new chip value\n     * @param value\n     */\n    add(value) {\n        // check value is not empty\n        if (value !== '' && value !== ' ') {\n            // replace \" to '\n            value = value.replace(/\"/g, \"'\");\n\n            // check duplicates\n            let exists = this.chips.find((item) => {\n                return item === value;\n            });\n\n            if (!exists) {\n                this.chips.push(value);\n                this.refresh();\n            }\n        }\n    }\n\n    /**\n     * Removes a chip by value\n     * @param value\n     */\n    delete(value) {\n        this.chips = this.chips.filter((item) => {\n            return item !== value;\n        });\n\n        this.refresh();\n    }\n}","/*\n * Created by Artyom Manchenkov\n * artyom@manchenkoff.me\n * manchenkoff.me © 2019\n */\n\nimport Widget from '../classes/widget'\n\nexport default class Slider extends Widget {\n    static get selector() {\n        return '[data-slider]';\n    }\n\n    static get class() {\n        return Slider;\n    }\n\n    init() {\n        //\n    }\n}","/*\n * Created by Artyom Manchenkov\n * artyom@manchenkoff.me\n * manchenkoff.me © 2019\n */\n\nimport Widget from '../classes/widget'\n\n/**\n * Tabs component\n * @property {string} name\n * @property {int} index\n * @property {HTMLElement[]} pages\n */\nexport default class Tabs extends Widget {\n    /**\n     * @inheritDoc\n     */\n    static get selector() {\n        return '[data-tabs]';\n    }\n\n    /**\n     * @inheritDoc\n     */\n    static get class() {\n        return Tabs;\n    }\n\n    /**\n     * @inheritDoc\n     */\n    init() {\n        this.name = this.element.dataset.tabs;\n\n        this._buildButtons();\n\n        this._buildPages();\n    }\n\n    /**\n     * Builds binding for navigation buttons\n     * @private\n     */\n    _buildButtons() {\n        this.buttons = this.element.querySelectorAll('.tab-item');\n\n        this.buttons.forEach(\n            (button, idx) => {\n                button.dataset.tab = idx;\n\n                // saves current active page index\n                if (button.classList.contains('active')) {\n                    this.index = idx;\n                }\n\n                button.onclick = (event) => {\n                    event.preventDefault();\n\n                    this.active(event.target.parentElement.dataset.tab);\n                };\n            }\n        );\n    }\n\n    /**\n     * Builds style rules for content pages\n     * @private\n     */\n    _buildPages() {\n        this.pages = document.querySelectorAll(`[data-tabs-content=\"${this.name}\"] li`);\n\n        this.pages.forEach(\n            (page, idx) => {\n                page.style.display = (idx !== this.index)\n                    ? 'none'\n                    : 'block';\n            }\n        );\n    }\n\n    /**\n     * Refreshes tabs to the latest changes\n     */\n    refresh() {\n        // set active navigation button\n        this.buttons.forEach(\n            (button, idx) => {\n                if (idx === this.index) {\n                    button.classList.add('active');\n                } else {\n                    button.classList.remove('active');\n                }\n            }\n        );\n\n        // show active content page\n        this.pages.forEach(\n            (page, idx) => {\n                page.style.display = (idx === this.index)\n                    ? 'block'\n                    : 'none';\n            }\n        );\n    }\n\n    /**\n     * Changes active page and button by selected index\n     * @param idx\n     */\n    active(idx) {\n        this.index = parseInt(idx);\n\n        this.refresh();\n    }\n}","/*\n * Created by Artyom Manchenkov\n * artyom@manchenkoff.me\n * manchenkoff.me © 2019\n */\n\nimport Widget from '../classes/widget'\n\nexport default class Toast extends Widget {\n    static get selector() {\n        return '[data-toast]';\n    }\n\n    static get class() {\n        return Toast;\n    }\n\n    init() {\n        //\n    }\n}","/*\n * Created by Artyom Manchenkov\n * artyom@manchenkoff.me\n * manchenkoff.me © 2019\n */\n\n// import and register components\nimport Autocomplete from '../widgets/autocomplete'\nimport Calendar from '../widgets/calendar'\nimport Chips from '../widgets/chips'\nimport Slider from '../widgets/slider'\nimport Tabs from '../widgets/tabs'\nimport Toast from '../widgets/toast'\n\nwindow.Spectre = {\n    Autocomplete,\n    Calendar,\n    Chips,\n    Slider,\n    Tabs,\n    Toast\n};\n\nfunction init() {\n    Object\n        .getOwnPropertyNames(Spectre)\n        .forEach((className) => {\n            Spectre[className].register();\n        });\n}\n\nwindow.onload = () => {\n    init();\n};","// extracted by mini-css-extract-plugin"],"sourceRoot":""}